name: tests

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testing
          POSTGRES_USER: sail
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:alpine
        ports:
          - 6379:6379

      mailpit:
        image: axllent/mailpit
        ports:
          - 1025:1025
          - 8025:8025

    env:
      DB_CONNECTION: pgsql
      DB_HOST: 127.0.0.1
      DB_PORT: 5432
      DB_DATABASE: testing
      DB_USERNAME: sail
      DB_PASSWORD: password
      REDIS_HOST: 127.0.0.1
      MAIL_HOST: 127.0.0.1
      MAIL_PORT: 1025
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      OPENAI_ORGANIZATION: ${{ secrets.OPENAI_ORGANIZATION }}
      TYPESENSE_API_KEY: ${{ secrets.TYPESENSE_API_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: pdo_pgsql, redis
          tools: composer
          coverage: none

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm ci

      - name: Install PHP Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Prepare Laravel Environment
        run: |
          cp .env.testing.example .env
          echo "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" >> .env
          echo "OPENAI_ORGANIZATION=${{ secrets.OPENAI_ORGANIZATION }}" >> .env
          echo "TYPESENSE_API_KEY=${{ secrets.TYPESENSE_API_KEY }}" >> .env
          php artisan config:clear
          php artisan cache:clear
          php artisan key:generate
          php artisan migrate --force

      - name: Build Assets
        run: npm run build

      - name: Run Tests
        run: php artisan test --env=testing
